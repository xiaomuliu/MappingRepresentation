class(grd$x[30])
?nnet
library(nnet)
?nnet
?roc
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/BurglaryAnalysis/CachedFiles/BurglaryBeatwiseTimeSeries.RData")
NumGrdinBeat
summary(PredResults$INC_CNT)
summary(BurglaryData.eval_stfdf@data$INC_CNT)
d
summary(polysample)
PredResults.sub <- subset(PredResults, DATEOCC==d,select=c("X_COORD","Y_COORD","DATEOCC"))
?merge
head(polysample)
head(PredResult)
head(PredResults)
head(PredResults.sub)
range(polysample$X_COORD)
range(PredResults$X_COORD)
PredResults.sub2 <- merge(PredResults.sub,polysample,by=c("X_COORD","Y_COORD"),all=TRUE)
beat_template.pred_spdf <- beat_template.spdf
beat_template.pred_spdf@data$TSpred <- rep(NA,nrow(beat_template.pred_spdf@data))
beat_template.pred_spdf@data$TSerr <- rep(NA,nrow(beat_template.pred_spdf@data))
PredResults <- data.frame(matrix(ncol=7, nrow=nrow(grd.beat_s@coords)*length(dateSeq.eval)))
colnames(PredResults) <- c("X_COORD","Y_COORD","DATEOCC","BEAT","INC_CNT","TSpred","TSerr")
PredResults$DATEOCC <- rep(dateSeq.eval,each=nrow(grd.beat_s@coords))
PredResults$X_COORD <- rep(grd.beat_s@coords[,1],length(dateSeq.eval))
PredResults$Y_COORD <- rep(grd.beat_s@coords[,2],length(dateSeq.eval))
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
Pred.df <- as.data.frame(BurglaryData.eval_stfdf[,d])
Pred.df$DATEOCC <- rep(d,nrow(Pred.df))
beatPred.spdf <- beat_template.pred_spdf
for (j in beatList){
Pred.beat_sub <- subset(Pred.df,BEAT==j)
beatPred.spdf@data$INC_CNT[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$INC_CNT
beatPred.spdf@data$TSpred[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$TSpred
beatPred.spdf@data$TSerr[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$TSerr
}
polysample <- over(grd.beat_s,beatPred.spdf)
polysample <- subset(cbind(polysample, grd.beat_s@coords),select=-c(OBJECTID))
names(polysample)[names(polysample)=="BEAT_NUMBE"] <- "BEAT"
PredResults.sub <- subset(PredResults, DATEOCC==d,select=c("X_COORD","Y_COORD","DATEOCC"))
PredResults.sub <- merge(PredResults.sub,polysample,by=c("X_COORD","Y_COORD"),all=TRUE)
PredResults[PredResults$DATEOCC==d,] <- PredResults.sub
}
warnings(0)
beat_template.pred_spdf <- beat_template.spdf
beat_template.pred_spdf@data$TSpred <- rep(NA,nrow(beat_template.pred_spdf@data))
beat_template.pred_spdf@data$TSerr <- rep(NA,nrow(beat_template.pred_spdf@data))
PredResults <- data.frame(matrix(ncol=7, nrow=nrow(grd.beat_s@coords)*length(dateSeq.eval)))
colnames(PredResults) <- c("X_COORD","Y_COORD","DATEOCC","BEAT","INC_CNT","TSpred","TSerr")
PredResults$DATEOCC <- rep(dateSeq.eval,each=nrow(grd.beat_s@coords))
PredResults$X_COORD <- rep(grd.beat_s@coords[,1],length(dateSeq.eval))
PredResults$Y_COORD <- rep(grd.beat_s@coords[,2],length(dateSeq.eval))
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
Pred.df <- as.data.frame(BurglaryData.eval_stfdf[,d])
Pred.df$DATEOCC <- rep(d,nrow(Pred.df))
beatPred.spdf <- beat_template.pred_spdf
for (j in beatList){
Pred.beat_sub <- subset(Pred.df,BEAT==j)
beatPred.spdf@data$INC_CNT[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$INC_CNT
beatPred.spdf@data$TSpred[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$TSpred
beatPred.spdf@data$TSerr[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$TSerr
}
polysample <- over(grd.beat_s,beatPred.spdf)
polysample <- subset(cbind(polysample, grd.beat_s@coords),select=-c(OBJECTID,DISTRICT))
names(polysample)[names(polysample)=="BEAT_NUMBE"] <- "BEAT"
PredResults.sub <- subset(PredResults, DATEOCC==d,select=c("X_COORD","Y_COORD","DATEOCC"))
PredResults.sub <- merge(PredResults.sub,polysample,by=c("X_COORD","Y_COORD"),all=TRUE)
PredResults[PredResults$DATEOCC==d,] <- PredResults.sub
}
PredResults$BEAT <- factor(PredResults$BEAT)
levels(PredResults$BEAT) <- levels(BurglaryData.eval$BEAT)
grdInBeat <- over(grd.beat_s,beat_template.pred_spdf)
grdInBeat <- subset(cbind(grdInBeat, grd.beat_s@coords),select=-c(OBJECTID))
names(grdInBeat)[names(grdInBeat)=="BEAT_NUMBE"] <- "BEAT"
grdInBeat <- subset(grdInBeat,select=c("BEAT","X_COORD","Y_COORD"))
NumGrdinBeat <- as.data.frame(table(grdInBeat$BEAT))
names(NumGrdinBeat) <- c("BEAT","NumGrd")
for (i in 1:nrow(NumGrdinBeat)){
idx <- PredResults$BEAT==NumGrdinBeat$BEAT[i]
PredResults$INC_CNT[idx] <- PredResults$INC_CNT[idx]/NumGrdinBeat$NumGrd[i]
PredResults$TSpred[idx] <- PredResults$TSpred[idx]/NumGrdinBeat$NumGrd[i]
PredResults$TSerr[idx] <- PredResults$TSerr[idx]/NumGrdinBeat$NumGrd[i]
}
prob <- 0.9
filepath <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/BurglaryAnalysis/Plots/BeatPredFig/"
par(mfrow=c(1,1))
ptm <- proc.time()
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
PredResults.sub <- subset(PredResults,DATEOCC==d)
PredResults.subRaster <- rasterize(PredResults.sub[,c("X_COORD","Y_COORD")], r,
PredResults.sub$TSpred, fun=sum)
BurglaryActualPts.sub <- subset(BurglaryActualPts,DATEOCC==d,select=c("X_COORD","Y_COORD","INC_CNT"))
coordinates(BurglaryActualPts.sub) <- c("X_COORD", "Y_COORD") # promote to SpatialPointsDataFrame
proj4string(BurglaryActualPts.sub) <- proj4string(beat_template.spdf)
Hit.pred <- HitRate(PredResults.sub$TSpred,PredResults.subRaster,prob,BurglaryActualPts.sub)
jpeg(paste0(filepath,d,".jpg"), width=1118, height=713, units="px")
plot(PredResults.subRaster,col=jet.colors(256), main="Beat-wise time series prediction",
panel.first=grid(grd.beat_s@grid@cells.dim[2], grd.beat_s@grid@cells.dim[1],col="lightgray", lty="dotted"))
plot(Hit.pred$inPoly_poly, border="red", lwd=1.2, add=TRUE)
plot(BurglaryActualPts.sub, pch=16,col="red",cex=0.7,add=TRUE)
dev.off()
}
proc.time()-ptm
ptm <- proc.time()
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
PredResults.sub <- subset(PredResults,DATEOCC==d)
PredResults.subRaster <- rasterize(PredResults.sub[,c("X_COORD","Y_COORD")], r,
PredResults.sub$TSpred, fun=sum)
BurglaryActualPts.sub <- subset(BurglaryActualPts,DATEOCC==d,select=c("X_COORD","Y_COORD","INC_CNT"))
coordinates(BurglaryActualPts.sub) <- c("X_COORD", "Y_COORD") # promote to SpatialPointsDataFrame
proj4string(BurglaryActualPts.sub) <- proj4string(beat_template.spdf)
for (p in 1:length(probset)){
Hit.pred <- HitRate(PredResults.sub$TSpred,PredResults.subRaster,probset[p],BurglaryActualPts.sub)
TPR.pred[i,p] <- Hit.pred$HitRate
}
}
proc.time()-ptm
avgTPR.pred <- colMeans(TPR.pred)
avgTPR.long <- colMeans(TPR.long)
avgTPR.short <- colMeans(TPR.short)
# par(mfrow=c(1,1),pty="s")
# plot(probset,avgTPR.pred,type='b',col='red',cex=1,pch=16,lty="solid",
#      xlab="Pixel quantile of hot spots",ylab="Hit rate",main="Average sensitivity over all test examples",cex.main=0.75)
# lines(probset,avgTPR.long,type='b',col='green',cex=1,pch=15,lty="dotted")
# lines(probset,avgTPR.short,type='b',col='blue',cex=1,pch=17,lty="dashed")
# legend("bottom",legend=c("prediction model","long-term density","short-term density"),
#        col=c("red","green","blue"),pch=c(16,15,17),lty=c("solid","dotted","dashed"),inset = c(0,0),xpd=TRUE)
par(mfrow=c(1,1),pty="s")
plot(100*(1-probset),100*avgTPR.pred,type='b',col='red',cex=1,pch=16,lty="solid",cex.main=0.75,
xlab="Percentage of the highest pixel values (%)",ylab="Hit rate (%)",main="Average sensitivity over all test examples")
lines(100*(1-probset),100*avgTPR.long,type='b',col='green',cex=1,pch=15,lty="dotted")
lines(100*(1-probset),100*avgTPR.short,type='b',col='blue',cex=1,pch=17,lty="dashed")
legend("bottom",legend=c("prediction model","long-term density","short-term density"),
col=c("red","green","blue"),pch=c(16,15,17),lty=c("solid","dotted","dashed"),inset = c(0,0),xpd=TRUE)
PredResults <- data.frame(matrix(ncol=7, nrow=nrow(grd.beat_s@coords)*length(dateSeq.eval)))
colnames(PredResults) <- c("X_COORD","Y_COORD","DATEOCC","BEAT","INC_CNT","TSpred","TSerr")
PredResults$DATEOCC <- rep(dateSeq.eval,each=nrow(grd.beat_s@coords))
PredResults$X_COORD <- rep(grd.beat_s@coords[,1],length(dateSeq.eval))
PredResults$Y_COORD <- rep(grd.beat_s@coords[,2],length(dateSeq.eval))
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
Pred.df <- as.data.frame(BurglaryData.eval_stfdf[,d])
Pred.df$DATEOCC <- rep(d,nrow(Pred.df))
beatPred.spdf <- beat_template.pred_spdf
for (j in beatList){
Pred.beat_sub <- subset(Pred.df,BEAT==j)
beatPred.spdf@data$INC_CNT[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$INC_CNT
beatPred.spdf@data$TSpred[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$TSpred
beatPred.spdf@data$TSerr[beatPred.spdf@data$BEAT_NUMBE==j] <- Pred.beat_sub$TSerr
}
polysample <- over(grd.beat_s,beatPred.spdf)
polysample <- subset(cbind(polysample, grd.beat_s@coords),select=-c(OBJECTID,DISTRICT))
names(polysample)[names(polysample)=="BEAT_NUMBE"] <- "BEAT"
PredResults.sub <- subset(PredResults, DATEOCC==d,select=c("X_COORD","Y_COORD","DATEOCC"))
PredResults.sub <- merge(PredResults.sub,polysample,by=c("X_COORD","Y_COORD"),all=TRUE)
PredResults[PredResults$DATEOCC==d,] <- PredResults.sub
}
PredResults$BEAT <- factor(PredResults$BEAT)
levels(PredResults$BEAT) <- levels(BurglaryData.eval$BEAT)
prob <- 0.9
filepath <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/BurglaryAnalysis/Plots/BeatPredFig/"
par(mfrow=c(1,1))
ptm <- proc.time()
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
PredResults.sub <- subset(PredResults,DATEOCC==d)
PredResults.subRaster <- rasterize(PredResults.sub[,c("X_COORD","Y_COORD")], r,
PredResults.sub$TSpred, fun=sum)
BurglaryActualPts.sub <- subset(BurglaryActualPts,DATEOCC==d,select=c("X_COORD","Y_COORD","INC_CNT"))
coordinates(BurglaryActualPts.sub) <- c("X_COORD", "Y_COORD") # promote to SpatialPointsDataFrame
proj4string(BurglaryActualPts.sub) <- proj4string(beat_template.spdf)
Hit.pred <- HitRate(PredResults.sub$TSpred,PredResults.subRaster,prob,BurglaryActualPts.sub)
jpeg(paste0(filepath,d,".jpg"), width=1118, height=713, units="px")
plot(PredResults.subRaster,col=jet.colors(256), main="Beat-wise time series prediction",
panel.first=grid(grd.beat_s@grid@cells.dim[2], grd.beat_s@grid@cells.dim[1],col="lightgray", lty="dotted"))
plot(Hit.pred$inPoly_poly, border="red", lwd=1.2, add=TRUE)
plot(BurglaryActualPts.sub, pch=16,col="red",cex=0.7,add=TRUE)
dev.off()
}
proc.time()-ptm
ptm <- proc.time()
for (i in 1:length(dateSeq.eval)){
d <- dateSeq.eval[i]
PredResults.sub <- subset(PredResults,DATEOCC==d)
PredResults.subRaster <- rasterize(PredResults.sub[,c("X_COORD","Y_COORD")], r,
PredResults.sub$TSpred, fun=sum)
BurglaryActualPts.sub <- subset(BurglaryActualPts,DATEOCC==d,select=c("X_COORD","Y_COORD","INC_CNT"))
coordinates(BurglaryActualPts.sub) <- c("X_COORD", "Y_COORD") # promote to SpatialPointsDataFrame
proj4string(BurglaryActualPts.sub) <- proj4string(beat_template.spdf)
for (p in 1:length(probset)){
Hit.pred <- HitRate(PredResults.sub$TSpred,PredResults.subRaster,probset[p],BurglaryActualPts.sub)
TPR.pred[i,p] <- Hit.pred$HitRate
}
}
proc.time()-ptm
avgTPR.pred <- colMeans(TPR.pred)
avgTPR.long <- colMeans(TPR.long)
avgTPR.short <- colMeans(TPR.short)
# par(mfrow=c(1,1),pty="s")
# plot(probset,avgTPR.pred,type='b',col='red',cex=1,pch=16,lty="solid",
#      xlab="Pixel quantile of hot spots",ylab="Hit rate",main="Average sensitivity over all test examples",cex.main=0.75)
# lines(probset,avgTPR.long,type='b',col='green',cex=1,pch=15,lty="dotted")
# lines(probset,avgTPR.short,type='b',col='blue',cex=1,pch=17,lty="dashed")
# legend("bottom",legend=c("prediction model","long-term density","short-term density"),
#        col=c("red","green","blue"),pch=c(16,15,17),lty=c("solid","dotted","dashed"),inset = c(0,0),xpd=TRUE)
par(mfrow=c(1,1),pty="s")
plot(100*(1-probset),100*avgTPR.pred,type='b',col='red',cex=1,pch=16,lty="solid",cex.main=0.75,
xlab="Percentage of the highest pixel values (%)",ylab="Hit rate (%)",main="Average sensitivity over all test examples")
lines(100*(1-probset),100*avgTPR.long,type='b',col='green',cex=1,pch=15,lty="dotted")
lines(100*(1-probset),100*avgTPR.short,type='b',col='blue',cex=1,pch=17,lty="dashed")
legend("bottom",legend=c("prediction model","long-term density","short-term density"),
col=c("red","green","blue"),pch=c(16,15,17),lty=c("solid","dotted","dashed"),inset = c(0,0),xpd=TRUE)
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/MC/SpatialFeatureMaps.RData")
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/MC/SegmentHotRegions.RData")
for (i in 1:length(classifier)){
if (i==1){
plot(rocCurve[[i]],col=cl[i],lty=1,lwd=2,downsampling=0.01)
}else{
plot(rocCurve[[i]],col=cl[i],lty=1,lwd=2,downsampling=0.01,add=TRUE)
}
}
mtext("ROC",side=3,cex=1,outer=TRUE)
par(new=TRUE)
plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend("bottomright",legend=classifier,col=cl,lty=1,lwd=2,cex=0.8,inset=c(0,0),xpd=TRUE)
print("AUC")
for(i in 1:length(classifier)){
print(paste0(classifier[i],":",round(aucVal[i],3)))
}
par(mfrow=c(1,1),mar=c(5,5,5,5),xaxs="i",yaxs="i",cex.axis=1,cex.lab=1,pty="s")
for (i in 1:length(classifier)){
if (i==1){
plot(rocCurve[[i]],col=cl[i],lty=1,lwd=2,downsampling=0.01)
}else{
plot(rocCurve[[i]],col=cl[i],lty=1,lwd=2,downsampling=0.01,add=TRUE)
}
}
mtext("ROC",side=3,cex=1,outer=TRUE)
par(new=TRUE)
plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n",xlab="",ylab="")
legend("bottomright",legend=classifier,col=cl,lty=1,lwd=2,cex=0.8,inset=c(0,0),xpd=TRUE)
print("AUC")
for(i in 1:length(classifier)){
print(paste0(classifier[i],":",round(aucVal[i],3)))
}
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/MC/SegmentHotRegions.RData")
library(ROCR)
print("AUC")
for(i in 1:length(classifier)){
print(paste0(classifier[i],":",round(aucVal[i],3)))
}
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/MC/GroupData_ModelComparison3.RData")
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/MC/GroupData_ModelComparison3.RData")
print("AUC")
for(i in 1:length(classifier)){
print(paste0(classifier[i],":",round(aucVal[i],3)))
}
load("~/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/MC/SegmentHotRegions.RData")
library(randomForest)
?randomForest
print("AUC")
for(i in 1:length(classifier)){
print(paste0(classifier[i],":",round(aucVal[i],3)))
}
P <- matrix(runif(1e4*1e4),ncol=1e4)
P <- matrix(runif(2e4*2e4),ncol=2e4)
library(lgcp)
?win
?stppp
library(DBI)
library(rJava)
library(RJDBC)
drv <- JDBC("oracle.jdbc.OracleDriver", classPath="/Users/xiaomuliu/CrimeProject/CPDserverinstantclient_11_2/ojdbc5.jar", " ")
?JDBC
drv <- JDBC("oracle.jdbc.OracleDriver", classPath="/Users/xiaomuliu/CrimeProject/CPDserver/instantclient_11_2/ojdbc5.jar", " ")
drv <- JDBC("oracle.jdbc.OracleDriver", classPath="/Users/xiaomuliu/CrimeProject/CPDserver/instantclient_12_1/ojdbc5.jar", " ")
drv <- JDBC("oracle.jdbc.OracleDriver", classPath="/Users/xiaomuliu/CrimeProject/CPDserver/instantclient_12_1/ojdbc6.jar", " ")
a <- 1:3
b <- 1:3
plot(a,b)
?acf
setwd("/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/ExploratoryAnalysis/Mapping/")
load("MatchedBurglaryData_portal.RData")
install.packages("plotKML")
library(sp)
library(plotKML)
?KML_open
?kml_open
kml_open(Boundaries_Census Tracts_2010.kml)
kml_open("Boundaries_Census Tracts_2010.kml")
kml_close()
kml_close("Boundaries_Census Tracts_2010.kml")
plotKML("Boundaries_Census Tracts_2010.kml")
data("eberg")
CrimeData <- BurglaryData
rm(BurglaryData)
CrimeData.sub <- subset(CrimeData,DATEOCC>=as.Date("2014-12-01") & DATEOCC<=as.Date("2014-12-31"))
crime.sp <- CrimeData.sub
coordinates(crime.sp) <- ~X_COORD+Y_COORD
prj <- paste("+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999",
"+x_0=300000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs +ellps=GRS80 +towgs84=0,0,0")
proj4string(crime.sp) <- prj
crime.sp2 <- reproject(crime.sp)
plotKML(crime.sp2["INC_CNT"])
?kml
kml(crimp.sp2, file = "crime.sp2__INC_CNT__.kml")
kml(crim3.sp2, file = "crime.sp2__INC_CNT__.kml")
kml(crime.sp2, file = "crime.sp2__INC_CNT__.kml")
Path.census_tract <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/Census_Tracts"
census_tract.shp <- readOGR(Path.census_tract,"Census_Tracts")
library(rgeos)
library(rgdal)
census_tract.shp <- readOGR(Path.census_tract,"Census_Tracts")
library(ggplot2)
library(ggmap)
?qmap
map <- qmap(location='chicago', zoom = 12, maptype = 'roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map <- qmap(location='chicago', zoom = 14, maptype = 'roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map <- qmap(location='chicago', zoom = 8, maptype = 'roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map <- qmap(location='chicago', zoom = 10, maptype = 'roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map <- qmap(location='chicago', zoom = 11, maptype = 'roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map <- qmap(location='chicago', zoom = 11.5, maptype = 'roadmap')
map <- qmap(location='chicago', zoom=12, maptype='roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
map <- qmap(location='chicago', zoom=11, maptype='roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
plot(census_tract.shp)
box(which = "plot", lty = "solid")
?get_map
map <- qmap(location='chicago', zoom='auto', maptype='roadmap')
map + geom_point(data = CrimeData.sub, aes(x = LONG, y = LAT), color="red", size=2, alpha=0.8)
chiMap <- qet_map(location='chicago', zoom=11, maptype='roadmap',source="google")
chiMap <- get_map(location='chicago', zoom=11, maptype='roadmap',source="google")
chiMap@crs
chiMap <- gmap(location='chicago', zoom=11, maptype='roadmap',source="google")
rm(chiMap)
ChiMap <- get_map(location='chicago', zoom=11, maptype='roadmap',source="google")
library(ggplot2)
?geo_path
?geom_path
Path.CTA_routes <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/CTA_Routes"
CTA_routes.shp <- readOGR(Path.CTA_routes,"CTA_Routes")
plot(CTA_routes.shp,main="CTA routes")
?reproject
CTA_routes <- spTransform(CTA_routes.shp, CRS("+init=epsg:4326"))
census_tract <- spTransform(census_tract.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
crime.sp <- CrimeData.sub
coordinates(crime.sp) <- ~X_COORD+Y_COORD
prj <- paste("+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999",
"+x_0=300000 +y_0=0 +datum=NAD83 +units=us-ft +no_defs +ellps=GRS80 +towgs84=0,0,0")
proj4string(crime.sp) <- prj
crime <- spTransform(crime.sp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
ChiMap+geom_path(aes(x=long, y=lat), data =CTA_routes,
colour = 'blue', size = 1, lineend = "butt", linejoin = "round", linemitre = 1)
+geom_point(data = crime, aes(x= LONG, y = LAT), color="red", size=2, alpha=0.8)
ChiMap+geom_path(aes(x=long, y=lat), data =CTA_routes,
colour = 'blue', size = 1, lineend = "butt", linejoin = "round", linemitre = 1)
?fortify
CTAroute <- fortify(CTA_routes) #simplify to use with ggplot
ChiMap+geom_path(aes(x=long, y=lat), data =CTAroute,
colour = 'blue', size = 1, lineend = "butt", linejoin = "round", linemitre = 1)
Crime <- fortify(crime)
ChiMap+geom_path(aes(x=long, y=lat), data =CTAroute,
colour = 'blue', size = 1, lineend = "butt", linejoin = "round", linemitre = 1)
?geom_path
censusTract <- fortify(census_tract)
ChiMap+geom_polygon(aes(x=long, y=lat), data = censusTract, colour = 'white', fill = 'black', alpha = .4, size = .3)
ChiMap <- qmap(location='chicago', zoom=11, maptype='roadmap',source="google")
ChiMap+geom_polygon(aes(x=long, y=lat), data = censusTract, colour = 'white', fill = 'black', alpha = .4, size = .3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, colour='blue', size= 1, lineend="butt", linejoin="round", linemitre=1)
+geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)
+geom_polygon(aes(x=long, y=lat), data=censusTract, colour ='white', fill='grey', alpha=.4, size =.3)
?geo_polygon
?geom_polygon
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)
+geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)
+geom_polygon(aes(x=long, y=lat), data=censusTract, color ='white', fill='gray', alpha=.4, size=.3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)
+geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)
+geom_polygon(aes(x=long, y=lat), data=censusTract, color ='white', alpha=.4, size=.3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)
+geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)
+geom_polygon(aes(x=long, y=lat), data=censusTract, color='white',fill="black", alpha=.4, size=.3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+geom_polygon(aes(x=long, y=lat), data=censusTract, color='white',fill="black", alpha=.4, size=.3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)
+geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)
+geom_polygon(aes(x=long, y=lat), data=censusTract, color='white',fill="black", alpha=.4, size=.3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+
geom_polygon(aes(x=long, y=lat), data=censusTract, color='white',fill="black", alpha=.4, size=.3)
Path.census_tract <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/Census_Tracts"
census_tract.shp <- readOGR(Path.census_tract,"Census_Tracts")
census_tract <- spTransform(census_tract.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
censusTract <- fortify(census_tract)
Path.CTA_routes <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/CTA_Routes"
CTA_routes.shp <- readOGR(Path.CTA_routes,"CTA_Routes")
CTA_routes <- spTransform(CTA_routes.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
CTAroute <- fortify(CTA_routes) #simplify to use with ggplot
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+
geom_polygon(aes(x=long, y=lat), data=censusTract, color='white',fill="black", alpha=.2, size=.3)
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+
geom_polygon(aes(x=long, y=lat), data=censusTract, color='white', alpha=.2, size=.3)
ChiMap <- qmap(location='chicago', zoom=12, maptype='roadmap',source="google")
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+
geom_polygon(aes(x=long, y=lat), data=censusTract, color='white', alpha=.2, size=.3)
?fortify
census <- as.data.frame(census_tract)
sum(censusTract$hole)
length(unique(census_tract@data$TRACT_NUMA))
censusTract <- fortify(census_tract,region=TRACT_NUMA)
censusTract <- fortify(census_tract,region="TRACT_NUMA")
length(unique(census_tract@data$OBJECTID))
library(rgeos)
?readShapeSpatial
library(maptools)
censusTract <- fortify(census_tract,region="TRACT_NUMA")
rm(census)
CTAroute <- fortify(CTA_routes,region="ROUTE") #simplify to use with ggplot
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+
geom_polygon(aes(x=long, y=lat), data=censusTract, color='white', alpha=.2, size=.3)
Path.census_tract <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/Census_Tracts"
census_tract.shp <- readOGR(Path.census_tract,"Census_Tracts")
census_tract <- spTransform(census_tract.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
censusTract <- fortify(census_tract,region="TRACT_NUMA")
Path.CTA_routes <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/CTA_Routes"
CTA_routes.shp <- readOGR(Path.CTA_routes,"CTA_Routes")
CTA_routes <- spTransform(CTA_routes.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
CTAroute <- fortify(CTA_routes,region="ROUTE") #simplify to use with ggplot
ChiMap <- qmap(location='chicago', zoom=11, maptype='roadmap',source="google")
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=0.8)+
geom_polygon(aes(x=long, y=lat), data=censusTract, color='white', alpha=.2, size=.3)
censusTract <- fortify(census_tract,region="TRACT_COMM")
ChiMap+geom_path(aes(x=long, y=lat), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)
ChiMap+ geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
ChiMap+geom_polygon(aes(x=long, y=lat), data=censusTract, color='white', alpha=.2, size=.3)+
df
ChiMap+geom_polygon(aes(x=long, y=lat), data=censusTract, color='white', alpha=.2, size=.3)
?merge
censusTract <- fortify(census_tract,region="OBJECTID")
CTAroute <- fortify(CTA_routes,region="OBJECTID") #simplify to use with ggplot
censusTract <- fortify(census_tract,region="OBJECTID")
View(censusTract)
CTAroute <- fortify(CTA_routes,region="OBJECTID") #simplify to use with ggplot
ChiMap+geom_path(aes(x=long, y=lat,group=group,fill=id), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
ChiMap+geom_polygon(aes(x=long, y=lat,group=group,fill=id), data=censusTract, color='white', alpha=.2, size=.3)+
ChiMap+ geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group,fill=id), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group,fill=id), data=censusTract, color='white', alpha=.2, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.2, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.4, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
Path.park <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/Parks_Aug2012"
park.shp <- readOGR(Path.park,"Parks_Aug2012")
parks <- spTransform(park.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
park <- fortify(parks,region="OBJECTID") #simplify to use with ggplot
park <- fortify(parks,region="PARK_NO") #simplify to use with ggplot
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.4, size=.3)+
geom_polygon(aes(x=long, y=lat,group=group), data=park, color='green', alpha=.2, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
Path.school <- "/Users/xiaomuliu/CrimeProject/SpatioTemporalModeling/GISData/School_Grounds"
school.shp <- readOGR(Path.school,"School_Grounds")
schools <- spTransform(school.shp, CRS("+init=epsg:4326")) # reproject to WGS84 (LONG LAT)
school <- fortify(schools,region="OBJECTID") #simplify to use with ggplot
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.4, size=.3)+
geom_polygon(aes(x=long, y=lat,group=group), data=school, color='green', alpha=.3, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.3, size=.3)+
geom_polygon(aes(x=long, y=lat,group=group), data=school, color='green', alpha=.4, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=2, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.7, size=.3)+
geom_polygon(aes(x=long, y=lat,group=group), data=school, color='green', alpha=1, size=.3)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=1, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.5, size=.6)+
geom_polygon(aes(x=long, y=lat,group=group), data=school, color='green', alpha=1, size=.8)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=1.5, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.5, size=.6)+
geom_polygon(aes(x=long, y=lat,group=group), data=school, color='green', alpha=1, size=.6)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=1, alpha=1)
ChiMap+geom_path(aes(x=long, y=lat,group=group), data=CTAroute, color='blue', size=1, lineend="butt", linejoin="round", linemitre=1)+
geom_polygon(aes(x=long, y=lat,group=group), data=censusTract, color='white', alpha=.5, size=.6)+
geom_polygon(aes(x=long, y=lat,group=group), data=school, color='green',fill='green', alpha=1, size=.6)+
geom_point(data=CrimeData.sub, aes(x=LONG, y=LAT), color="red", size=1, alpha=1)
